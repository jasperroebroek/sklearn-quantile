name: build

on: workflow_call

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.1

      - name: Install dependencies
        run: python -m pip install cython wheel setuptools numpy>=1.22.3

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl


#jobs:
#  build-linux:
#    runs-on: ubuntu-latest
#    container: quay.io/pypa/manylinux2014_x86_64
#    strategy:
#      max-parallel: 5
#      matrix:
#        python-version: ["9", "10", "11", "12"]
#
#    steps:
#    - uses: actions/checkout@v4
#
#    - name: Install Python package dependencies
#      run: /opt/python/cp3${{ matrix.python-version }}-cp3${{ matrix.python-version }}/bin/python -m pip install cython wheel setuptools numpy>=1.22.3
#
#    - name: Build binary wheel
#      run: /opt/python/cp3${{ matrix.python-version }}-cp3${{ matrix.python-version }}/bin/python setup.py bdist_wheel
#
#    - name: Apply auditwheel for manylinux wheel
#      run: auditwheel repair -w dist dist/*
#
#    - name: Remove linux wheel
#      run: rm dist/*-linux_x86_64.whl
#
#    - name: Archive dist artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: dist-linux-3.${{ matrix.python-version }}
#        path: dist
#
#  build-macos:
#    runs-on: macos-13
#    strategy:
#      max-parallel: 5
#      matrix:
#        python-version: ["3.9", "3.10", "3.11", "3.12"]
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v4
#      with:
#        python-version: ${{ matrix.python-version }}
#
#    - name: Install Python package dependencies
#      run: pip install cython wheel setuptools numpy>=1.22.3
#
#    - name: Build binary wheel
#      run: python setup.py bdist_wheel
#
#    - name: Archive dist artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: dist-macos-${{ matrix.python-version }}
#        path: dist
#
#  build-windows:
#    runs-on: windows-latest
#    strategy:
#      max-parallel: 5
#      matrix:
#        python-version: ["3.9", "3.10", "3.11", "3.12"]
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Download Build Tools for Visual Studio 2019
#      run: Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_buildtools.exe -OutFile vs_buildtools.exe
#
#    - name: Run vs_buildtools.exe install
#      run: ./vs_buildtools.exe --quiet --wait --norestart --nocache --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 --add Microsoft.VisualStudio.Component.VC.140 --includeRecommended
#
#    - name: Set up Python ${{ matrix.python-version }} x64
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#        architecture: x64
#
#    - name: Install Python package dependencies
#      run: pip install cython wheel setuptools numpy>=1.22.3
#
#    - name: Build binary wheel
#      run: python setup.py bdist_wheel
#
#    - name: Archive dist artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: dist-windows-${{ matrix.python-version }}
#        path: dist
